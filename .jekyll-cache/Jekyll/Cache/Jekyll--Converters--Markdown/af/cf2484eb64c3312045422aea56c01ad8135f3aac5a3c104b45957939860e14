I"-=<h4 id="region">Region</h4>

<ul>
  <li>리전은 전세계에 걸쳐있습니다.</li>
  <li>ex) us-east-1, us-west-3 등</li>
  <li>데이터 센터의 클러스터가 됩니다.</li>
  <li>거의 대부분의 AWS서비스는 리전(특정 지역)에 초점이 맞춰집니다.</li>
</ul>

<p><br /></p>

<h4 id="리전-선택">리전 선택</h4>

<ul>
  <li>규정 준수 - 몇몇 정부에서 앱을 배포하는 국가의 로컬 데이터를 요구하는 경우가 있음 ( 프랑스는, 프랑스에 로컬 데이터가 위치해야 합니다)</li>
  <li>Latency - 대기 시간을 줄이기 위해 사용자와 가까운 위치를 이용합니다.</li>
  <li>가용 서비스 - 몇몇 지역에서는 서비스가 지원 되지 않기에 배포할 지역에 해당 서비스가 있는지 확인해야 합니다.</li>
  <li>가격 - 지역별로 가격이 다릅니다.</li>
</ul>

<p><br /></p>

<h4 id="az-availability-zones">AZ (Availability Zones)</h4>

<ul>
  <li>각각의 리전은 다수의 AZ를 가집니다. (보통 3, 2~6의 가용지역을 가짐)</li>
  <li>ex) ap-southeast-2a, ap-southeast-2b, ap-southeast-2c</li>
  <li>하나의 가용지역은, 하나이상의 데이터 센터를 생성할 것이며, 그것들은 네트워크와 연결성을 갖게 됩니다.</li>
  <li>각각의 가용지역은 각각 분리되어 있습니다. ( 재난등으로부터 보호 )</li>
  <li>높은 대역폭과 초저지연 네트워킹으로 연결되어 연결되어 있으며, 지역을 생성합니다.</li>
</ul>

<p><br /></p>

<h4 id="points-of-presence--edge-locations-">Points of Presence ( Edge Locations )</h4>

<ul>
  <li>AWS는 42개 국가 84개 도시에서 200개 이상의 존재를 가지고있으며, 이를 이용해서 저 지연으로 콘텐츠를 제공할 때 유리합니다.</li>
</ul>

<p><br /></p>

<h4 id="글로벌-서비스">글로벌 서비스</h4>

<ul>
  <li>IAM</li>
  <li>Route t3</li>
  <li>CloudFront</li>
  <li>WAF</li>
</ul>

<p>대부분의 서비스는 글로벌 서비스가 아닌 지역에 초점을 맞추고 있습니다.</p>

<p><br /></p>

<h4 id="iam">IAM</h4>

<ul>
  <li>IAM은 ID와 Access Management 를 나타내며 글로벌 서비스입니다.</li>
  <li>사용자를 생성하고 이들을 그룹으로 할당하빈다.</li>
  <li>Root account - 기본값으로 설정되어 있으며, 모든 권한을 가집니다.</li>
  <li>Users - IAM안에서 유저를 생성하고 하나의 사용자는 여러 조직을 가질 수 있습니다. ( 그룹을 갖지 않는 것도 가능 )</li>
  <li>Groups - 그룹은 유저만을 포함할 수 있습니다. ( 그룹안에 그룹 넣기 X )</li>
</ul>

<p><br /></p>

<h4 id="iam---permissions">IAM - Permissions</h4>

<ul>
  <li>유저나 그룹은 JSON 문서로 되어있는 정책을 할당받게 됩니다.</li>
  <li>정책들은 사용자들에게 권한을 정의하게 설정됩니다.</li>
  <li>최소 권한 원칙 - 보안, 서비스 등을 위해 필요한 최소한의 권한만 할당하세요 ( AWS 권장 원칙 )</li>
</ul>

<p><br /></p>

<h4 id="iam---password-policy">IAM - Password Policy</h4>

<ul>
  <li>비밀번호 설정으로 인해, 더 보안이 강화</li>
  <li>방법
    <ul>
      <li>비밀번호 최소 길이를 설정</li>
      <li>특정한 문자 유형을 요구(대문자 소문자 숫자 등)</li>
      <li>비밀번호를 바꾸게 설정</li>
      <li>같은 비밀번호 사용 방지</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h4 id="multi-factor-authentication--mfa-">Multi Factor Authentication ( MFA )</h4>

<ul>
  <li>AWS에 필수조항, 사용하도록 강력 권고</li>
  <li>루트 계정이나 IAM 유저를 보호할 수 있음</li>
  <li>보안디바이스를 이용하는 방식으로 비밀번호만 사용할 때보다 훨씬 강력한 보안 유지</li>
  <li>비밀번호를 해킹당해도, 계정이 손상되지 않는다는 장점이있음.</li>
</ul>

<p><br /></p>

<h4 id="aws의-mfa-디바이스">AWS의 MFA 디바이스</h4>

<ul>
  <li>Virtual MFA device
    <ul>
      <li>Google Authenticator ( phone only )</li>
      <li>Authy ( multi-device )</li>
    </ul>
  </li>
  <li>Universal 2nd Factor (U2F) Security key
    <ul>
      <li>YubiKey</li>
    </ul>
  </li>
  <li>Hardware Key Fob MFA Device
    <ul>
      <li>Gemalto</li>
    </ul>
  </li>
  <li>Hardware Key Fob MFA Device for AWS GovCloud(US)
    <ul>
      <li>Provided by SurePassID</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h4 id="aws-제어-방법">AWS 제어 방법</h4>

<ul>
  <li>AWS Management console</li>
  <li>Command Line Interface ( CLI )</li>
  <li>Software Developer Kit ( SDK )</li>
</ul>

<p>SDK의 경우 access key를 통해 제어되는데, 이는 관리 콘솔을 통해 생성 할 수 있음.( 일종의 비밀번호  )</p>

<ul>
  <li>Access Key ID - username</li>
  <li>Secret Access Key - password</li>
</ul>

<p><br /></p>

<h4 id="aws-cloudshell">AWS CloudShell</h4>

<ul>
  <li>일종의 AWS의 터미널 ( 단 지원하는 지역이 한정되어있음. )</li>
</ul>

<p><br /></p>

<h4 id="ec2">EC2</h4>

<ul>
  <li>Elastic Compute Cloud - Infrastructure as a Service(IaaS)</li>
  <li>EC2는 하나를 지칭하는 단어가 아니라, 여러개의 구성으로 확장된다.
    <ul>
      <li>EC2 ( 인스턴스 )</li>
      <li>EBS</li>
      <li>ELB</li>
      <li>ASG</li>
    </ul>
  </li>
  <li>OS : 리눅스, 윈도우, 맥OS 3개를 지원합니다.</li>
  <li>CPU, RAM, Storage, Network, 방화멱, 부트스트랩 스크립트 (처음 시작할때 설정한 코드가 실행됨) 등을 고려해서 인스턴스를 설정합니다.</li>
  <li>인스턴스의 이름규칙에 따라 작명되어있으며, 용도에 따라 적절한 인스턴스를 사용해야합니다. (c-컴퓨팅, m-메모리, s-스토리지 등)</li>
  <li>Security Group설정으로 보안  (포트, IPv4, IPv6, 인바운드 아웃바운드 설정 등)</li>
  <li>연결이 타임아웃된 상태면 보안그룹을 확인하고, connection refused 같은 경우는 어플리케이션을 확인한다.</li>
  <li>Ssh(22), http(80), ftp(21, file transfer protocol), sftp(22, secure file transfer protocol, ssh를 이용해서 전송하기 때문에 22번 포트 사용), https(443), rdp(3389, remote desktop protocol)</li>
</ul>

<p><br /></p>

<h4 id="ssh">SSH</h4>

<ul>
  <li>흔히 말하는 원격조종이라고 생각하면 편합니다.</li>
  <li>운영체제에 따라 연결법이 다릅니다. (mac, linux, windows10 이상, 이하)</li>
  <li>AWS의 Instance Connect를 이용하는 것이 제일 간단.</li>
</ul>

<p><br /></p>

<h4 id="ipv4-vs-ipv6">IPv4 vs IPv6</h4>

<ul>
  <li>IPv4의 주소가 거의 소멸되는 상태가 되자, IPv6를 새로 도입하게됨</li>
  <li>IPv4를 현재 사용하고 있는 기기가 대부분이기에 함부로 IPv6로 변경하지 못함</li>
  <li>현재는 웹사이트에서 IPv4를 사용하고 있으며, IPv6는 IOT에서 주로 사용하고 있음.</li>
</ul>

<p><br /></p>

<h4 id="public-vs-private">Public vs Private</h4>

<ul>
  <li>AWS에는 Public ip 와 Private ip를 제공하는데, Public ip 를 통해 인터넷을 통한 접속이 가능하고, Private ip를 통한 특정 공간( VPC )에서의 기기끼리의 연결이 가능</li>
</ul>

<p><br /></p>

<h4 id="elastic-ip">Elastic Ip</h4>

<ul>
  <li>인스턴스를 중지하고 다시 시작할 경우, Public ip가 변경되는데 이러한 것을 Elastic IP를 부착하여 고정된 Ip주소로 사용할 수 있습니다.</li>
  <li>AWS에서는 계정당 5개까지의 elastic ip를 제공 ( AWS에 추가 요청시 가능하지만, 드문 케이스)</li>
  <li>Elastic IP를 잘 사용하지 않는 것이 구조적으로 효율적 + DNS를 사용하는 것이 더 좋음</li>
</ul>

<p><br /></p>

<h4 id="placement-groupts">Placement Groupts</h4>

<ul>
  <li>클러스터: 하나의 AZ에서 (하나의 Rack) low-latency group을 이룬다. ( 고성능이지만, 고위험 )</li>
  <li>스프레드: AZ당 최대 7개의 인스턴스를 가지며 넓게 분포한다. ( 중요한 앱이있는 경우 사용 )</li>
  <li>파티션: 스프레드와 비슷하지만, 그룹당 수백개의 EC2 인스턴스들을 이용</li>
</ul>

<p><br /></p>

<h4 id="elastic-network-interfaces-eni">Elastic Network Interfaces (ENI)</h4>

<ul>
  <li>VPC의 논리적 구성 요소</li>
  <li>ENI는 다음의 특성을 가진다.
    <ul>
      <li>Primary private IPv4</li>
      <li>한개 or 더 많은 예비 IPv4를 가진다.</li>
      <li>한개의 Public IPv4를 가진다.</li>
      <li>하나 or 더 많은 Security group을 가질수 있다.</li>
      <li>Mac address가 있다.</li>
    </ul>
  </li>
  <li>EC2 인스턴스로 부터 독립적으로 생성 가능하다. 이를 장애 조치를 위해 EC2 인스턴스에 부착 가능</li>
  <li>하나의 AZ에 묶여 있다. (AZ끼리 이동 불가.)</li>
</ul>

<p><br /></p>

<h4 id="ec2-hibernate">EC2 Hibernate</h4>

<ul>
  <li>인스턴스는 중지할 수 있는데, 중지 할경우, disk(EBS)의 데이터가 다음 시작을 위해 그대로 유지되지만, OS는 정지되고 시작할때 재시작됩니다.</li>
  <li>Hibernate를 사용할 시, 모든 메모리가 보존됩니다. 이를 통해 인스턴스의 부팅 속도가 훨씬 빨라지게 됩니다. ( 운영시스템은 중지되거나 다시 시작한 적이 없기 때문에 )</li>
  <li>최대절전모드라고 생각하면 편함</li>
  <li>RAM상태는 EBS볼륨에 파일로 덤핑됩니다. ( EBS볼륨은 당연히 암호화가 되어야 함 )</li>
</ul>

<p><br /></p>

<h4 id="ec2-nitro">EC2 Nitro</h4>

<ul>
  <li>현재 사용중인 차세대 EC2 인스턴스 기본 플랫폼</li>
  <li>새로운 가상화 기술을 도입</li>
  <li>더 좋은 성능을 보이고, 더 나은 네트워크 옵션, 더 빠른 EBS지원(64000 IOPS가능, Nitro가 아닌 경우 최대 32000 IOPS) , 보안 향상, 많은 백엔드 개선</li>
</ul>

<p><br /></p>

<h4 id="understanding-vcpu">Understanding vCPU</h4>

<ul>
  <li>vCPU = CPU core * Thread</li>
  <li>비용 절감을 위해 Optimizing 할 수 있습니다. ( 코어당 쓰레드 갯수, 코어 갯수 등 )</li>
</ul>

<p><br /></p>

<h4 id="ec2-capacity-reservations">EC2 Capacity Reservations</h4>

<ul>
  <li>추가 용량을 미리 계획 (짧은 예약으로 기간과 용량만 설정하면됨)</li>
</ul>

<p><br /></p>

<h4 id="elastic-block-store-ebs">Elastic Block Store (EBS)</h4>

<ul>
  <li>네트워크를 통해 인스턴스에 연결되는 볼륨형태의 저장공간 ( 네트워크를 사용하기 때문에 데이터 전송간의 딜레이가 있을수 있습니다. )</li>
  <li>EBS를 통해 데이터를 유지할 수 있습니다.</li>
  <li>특정 AZ에 묶입니다.</li>
  <li>EC2 인스턴스로부터 탈부착 가능</li>
  <li>프로비저닝된 수용성 ( 얼마나 공간이 필요한지 정의해야함 )</li>
  <li>공간이 더 필요할 경우 시간이 지남에 따라 용량을 늘릴 수 있음</li>
  <li>Delete on Termination 옵션이 설정되어 있으면, 인스턴스가 삭제될때 루트 볼륨이 같이 삭제됩니다.</li>
</ul>

<p><br /></p>

<h4 id="ebs-스냅샷">EBS 스냅샷</h4>

<ul>
  <li>백업 ( 스냅샷 )을 생성할 수 있습니다.</li>
  <li>스냅샷을 위해 EBS를 인스턴스로부터 떼어낼 필요는 없지만, 완벽하게 진행하기 위해서는 권장됩니다.</li>
  <li>스냅샷 이후, 다른 AZ or 리전으로 카피 가능</li>
</ul>

<p><br /></p>

<h4 id="ami---amazone-machine-image">AMI - Amazone Machine Image</h4>

<ul>
  <li>EC2 인스턴스의 커스터마이즈
    <ul>
      <li>나만의 소프트웨어, 구성, 운영시스템, 모니터링 등 을 설정할 수 있습니다.</li>
      <li>더 빠르게 부팅하고, 더 빠르게 구성할 수 있습니다. ( AMI안에 내장되어 있어서 )</li>
    </ul>
  </li>
  <li>AMI는 특정 리전에 구축되어있습니다. ( 다른지역에서 사용하려면 지역간에 복사 )</li>
</ul>

<p><br /></p>

<h4 id="ec2-instance-store">EC2 Instance Store</h4>

<ul>
  <li>EBS 볼륨은 네트워크 드라이브이기에, 성능의 한계가 있습니다.</li>
  <li>EC2 Instance Store는 하드웨어 디스크가 EC2에 부착된 형식이기 때문에 높은 성능을 보여줍니다.</li>
  <li>더 나은 I/O 성능을 보여줍니다.</li>
  <li>단, 인스턴스가 종료되거나, 중지될 경우, 인스턴스 스토어의 저장공간 또한 손실됩니다.</li>
  <li>버퍼, 캐쉬, 스크래치 데이터, 임시 컨텐츠 등을 저장하기에 적절</li>
  <li>하드웨어가 손실됬을 때 큰 손실을 입을 가능성이 있습니다.</li>
  <li>EC2 인스턴스를 사용하기로 했다면, 백업이나 복제가 필수적입니다.</li>
</ul>

<p><br /></p>

<h4 id="ebs-volume-types">EBS Volume Types</h4>

<ul>
  <li>gp2 / gp3 : SSD 볼륨</li>
  <li>Io 1/ io 2 : SSD 볼륨, Highest - performance</li>
  <li>St 1 : HDD 볼륨,</li>
  <li>sc 1 : HDD 볼륨, 덜 사용하는 데이터 저장에 적절</li>
</ul>

<p><br /></p>

<h4 id="ebs-multi-attach---io1io2-family">EBS Multi-Attach - io1/io2 family</h4>

<ul>
  <li>EBS 볼륨을 여러개의 EC2 인스턴스에 부착하는 방법 ( 같은 AZ )</li>
  <li>각각의 인스턴스는 full read &amp; write 권한을 가집니다.</li>
</ul>

<p><br /></p>

<h4 id="ebs-encryption">EBS Encryption</h4>

<ul>
  <li>암호화된 EBS 생성하면 다음을 얻게 됩니다.
    <ul>
      <li>저장 데이터가 볼륨 내에서 암호화됩니다.</li>
      <li>인스턴스와 볼륨 사이에 이동중인 모든 데이터가 암호화됩니다.</li>
      <li>모든 스냅샷이 암호화됩니다.</li>
      <li>스냅샷에서 생성된 모든 볼륨이 암호화됩니다.</li>
    </ul>
  </li>
  <li>암호화 과정은 투명하게 처리되기 때문에 따로 할일은 없습니다. ( AWS에서 EC2 EBS에 의해 처리)</li>
  <li>이러한 암호화는 가능하면 모든 것에 적용하기를 권장합니다. - 이는 매우 적은 지연만을 가져옴</li>
  <li>KMS의 키를 활용합니다. (AES-256)</li>
</ul>

<p><br /></p>

<h4 id="efs---elastic-file-system">EFS - Elastic File System</h4>

<ul>
  <li>Managed NFS 혹은 네트워크 파일 시스템이라고 불립니다.</li>
  <li>이는 AZ 영역을 넘어서 여러 인스턴스에 탑재될 수 있습니다.</li>
  <li>가용성이 높고, 확장 가능하지만, 가격이 매우 비쌉니다. ( 단 사용한 만큼만 지불 )</li>
  <li>컨텐츠 관리, 웹서빙, 데이터 공유, 워드프레스 웹사이트 같은 것에 사용</li>
  <li>NFSv4.1 프로토콜 사용</li>
  <li>security group을 이용해서 EFS에 접근을 컨트롤</li>
  <li>EFS는 리눅스 기반에만 작동합니다.</li>
  <li>암호화를 위해서는 KMS키를 사용합니다.</li>
  <li>각각의 2가지의 모드가 존재
    <ul>
      <li>Performance mode
        <ul>
          <li>General purpose : 웹서버 등의 사용 사례 ( 지연 민감 파일 시스템 )</li>
          <li>Max I/O : 지연시간이 길어지지만, 사용량은 더 좋아집니다. ( 빅데이터에 적절 )</li>
        </ul>
      </li>
      <li>Throughput mode
        <ul>
          <li>Bursting ( 처리량이 파일시스템의 크기와 같이 확장 )</li>
          <li>Provisioned ( 구체적인 양 설정 )</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Storage Tiers 가 존재하여 수명주기 설정으로 자주 사용하지 않는 데이터는 가격이 싼 저장공간으로 이동 가능</li>
</ul>
:ET